repos:
  # Python hooks
  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.12.0
    hooks:
      # Run the linter.
      - id: ruff
        args: [--fix]
      # Run the formatter.
      - id: ruff-format
  - repo: local
    hooks:
      # Radon MI and Halstead checks
      - id: radon-check
        name: Radon Maintainability and Halstead Checks
        entry: |
          bash -c 'for file in "$@"; do 
            echo "Checking $file"; 
            radon mi -s "$file" | grep -E " - [CDEF] \(" && echo "Radon MI grade below B detected in $file!" && exit 1; 
            radon hal "$file" -s | awk -v filename="$file" "/effort/ { if (\$3 > 2000) print filename \": High Halstead effort:\" \$3 }"; 
          done; 
          echo "All MI grades are B or above."'
        language: system
        files: \.py$
        pass_filenames:
          true
          # Code similarity detection
      - id: pylint-similarities
        name: Code similarity detection (non-blocking)
        entry: bash -c 'echo "Checking for code similarities in data/src/..."; pylint --disable=all --enable=similarities --score=no data/src/ || true'
        language: system
        files: ^data/src/.*\.py$
        pass_filenames: false
  - repo: https://github.com/jendrikseipp/vulture
    rev: 'v2.3'
    hooks:
      - id: vulture
        name: vulture (Dead code detection)
        args: [--min-confidence, '80', data/src]
  # JavaScript hooks
  - repo: local
    hooks:
      # Formatting with Prettier - run directly on files
      - id: prettier
        name: Prettier (Code formatting)
        entry: npx prettier --write
        language: node
        files: \.(js|jsx|ts|tsx|json|css|scss|md|yml|yaml)$
      # Linting with ESLint - run directly on files
      - id: eslint
        name: ESLint (JavaScript linting)
        entry: npx eslint --fix
        language: node
        files: \.(js|jsx|ts|tsx)$
      # Dependency checks for Node.js
      - id: npm-audit
        name: Check Node.js dependencies
        entry: npm audit
        language: node
        files: ^package(-lock)?\.json$
        pass_filenames: false
